#!/usr/bin/ruby
require './../src/RbLearning'

train = DataManager.new("./input/train.csv")
train.remove('PassengerId')
res = train.remove('Survived')


train.remove('Embarked')
train.remove('Name')
train.remove('Ticket')
train.remove('Cabine')

train.addDumies

# train.describe_labels
# exit

nn = NeuroNet.new

m = train.matrix

size = 100
x = Matrix.setVectorizedMatrix(m[0...size * m.size_x], size, m.size_x)

l1 = NetLayer.new(x.size_x, 512)
l2 = NetLayer.new(512, 128)
l3 = NetLayer.new(128, 2)

# l1 = NetLayer.new(x.size_x, 128)
# l2 = NetLayer.new(128, 2)

# l1 = NetLayer.new(x.size_x, 2)

# ws = [l1]
# ws = [l1, l2]
layers = [l1, l2, l3]

y = Matrix.set(res[0...size].map do |i|
	tmp = [0] * 2
	tmp[i.to_i] = 1
	tmp
end)

(0...20000).each do |i|
	layers = nn.train(layers, x, y, 0.1)
	puts i
end


tests = DataManager.new("./input/test.csv")
# tests = LeastS.new("./intput/test.csv")
tests.remove('PassengerId')
res = tests.remove('Survived')


tests.remove('Embarked')
tests.remove('Name')
tests.remove('Ticket')
tests.remove('Cabine')

tests.addDumies

m = tests.matrix

x = Matrix.setVectorizedMatrix(m[0...m.size_y * m.size_x], m.size_y, m.size_x)

zs, pred = nn.feedForward(layers, x)

CSV.open("./res2.csv", "wb") do |csv|
	csv << ['PassengerId', 'Survived']
	m = pred.last.get2DArr
	(0...pred.last.size_y).each do |i|
		csv <<  [891 + i + 1, m[i].each_with_index.max.last]
	end
end
